<?xml version="1.0" encoding="utf-8"?>
<s:TabbedViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
								  xmlns:s="library://ns.adobe.com/flex/spark"
								  applicationDPI="240" 
								  applicationComplete="appComplete(event)">
	
	<fx:Script>
		<![CDATA[
			import flash.net.dns.SRVRecord;
			
			import flashx.textLayout.events.UpdateCompleteEvent;
			
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.NavigatorContent;
			
			
			protected function appComplete(event:FlexEvent):void
			{
				stage.addEventListener(KeyboardEvent.KEY_DOWN, handleKeyDown);
				stage.addEventListener(KeyboardEvent.KEY_UP, handleKeyUp);
			}
			
			protected function handleKeyDown(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.BACK) {
					trace("back down");
				}
			}
			
			protected function handleKeyUp(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.BACK) {
					//showExitAlert();
				}
			}
			
			protected function btn_back1_clickHandler(event:MouseEvent):void
			{
//				showExitAlert();
				NativeApplication.nativeApplication.exit();
			}
			
			var myAlert:MyAlert = new MyAlert();
			
			private function showExitAlert():void
			{
				trace("showExitAlert()");
				myAlert.open(this, true);
				
				updateAlertPosition();
				stage.addEventListener(ResizeEvent.RESIZE, updateAlertPosition);//设置界面监听，当flex中组件大小改变时的监听
			}

			protected function updateAlertPosition(event:Event = null):void
			{
				// Center the pop-up in the parent container.
				if (myAlert.isOpen) {
					var min = screen.width < screen.height ? screen.width : screen.height;
					
					myAlert.width = min * 3.0 / 4;
					myAlert.height = myAlert.width / 2.0;
					
					PopUpManager.centerPopUp(myAlert);
				}
			}

			public function clearAlert(event:MouseEvent=null):void
			{
				trace("clearAlert");
				stage.removeEventListener(ResizeEvent.RESIZE, updateAlertPosition);
				myAlert.close();
			}
			
			public function appExit(event:MouseEvent=null):void
			{
				trace("appExit yes");
				clearAlert();
				NativeApplication.nativeApplication.exit();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:Component className="MyAlert">
			<s:SkinnablePopUpContainer>
				<s:Panel title="hello,flex!" width="100%" height="85%" fontSize="40">
					<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="bottom" paddingTop="20" gap="20">
						<s:Label text="确定要退出吗？" fontSize="35"/>
						<s:HGroup width="100%" height="50%" horizontalAlign="center" verticalAlign="bottom"  fontSize="30">
							<s:Button label="YES" width="50%" height="100%" click="outerDocument.appExit()"/>
							<s:Button label="NO" width="50%" height="100%" click="outerDocument.clearAlert()"/>
						</s:HGroup>
					</s:VGroup>
				</s:Panel>
			</s:SkinnablePopUpContainer>
		</fx:Component>
	</fx:Declarations>
	
	<s:navigators>
		<s:ViewNavigator width="100%" height="100%" label="录音" firstView="views.RecordView">
			<s:navigationContent>
				<s:Button id="btn_back1"
						  click="btn_back1_clickHandler(event)"
						  icon="@Embed(source='assets/ic_back.png')"/>
			</s:navigationContent>
		</s:ViewNavigator>
		<s:ViewNavigator width="100%" height="100%" label="播放" firstView="views.PlayRecordView">
			<s:navigationContent>
				<s:Button id="btn_back2"
						  click="btn_back1_clickHandler(event)"
						  icon="@Embed(source='assets/ic_back.png')"/>
			</s:navigationContent>
		</s:ViewNavigator>
		<s:ViewNavigator width="100%" height="100%" label="ANE接口" firstView="views.ANEInterfaceView">
			<s:navigationContent>
				<s:Button id="btn_back3"
						  click="btn_back1_clickHandler(event)"
						  icon="@Embed(source='assets/ic_back.png')"/>
			</s:navigationContent>
		</s:ViewNavigator>
	</s:navigators>
	
</s:TabbedViewNavigatorApplication>
